# Date and Time
today <- Sys.Date()
today
now <- Sys.time()
now
class(today)
class(now)
my_date <- as.Date('1995-05-24')
my_date
my_date <- as.Date('1995-24-05', format = '%Y-%d-%m')
my_date
my_time <- as.POSIXct('1995-05-24 10:01:07')
my_time
unclass(my_date) # date to numeric
unclass(my_time) # time to numeric
attr(my_time, 'tzone')
attr(my_time, 'tzone')
day1 = "2023-08-13"
day2 = "2023-08-15"
day3 = "2023-08-20"
day4 = "2023-08-26"
day5 = "2023-08-31"
# Difference between last and first pizza day
day5-day1
day1 = Sys.Date()
day2 = Sys.Date() + 2
day3 = Sys.Date() + 7
day4 = Sys.Date() + 11
day5 = Sys.Date() + 18
# Difference between last and first pizza day
day5-day1
# Differences between consecutive pizza days: day_diff
pizza <- c(day1, day2, day3, day4, day5)
day_diff = diff(pizza)
day_diff
# Load packages
library('gapminder')
library('dplyr')
# Load packages
library('gapminder')
require('gapminder')
library('gapminder')
require('gapminder')
# Install packages
require('tidyverse')
install.packages("gapminder")
library('gapminder')
library('ggplot2')
install.packages("ggplot2")
library('ggplot2')
planets_df[positions,]
# Install packages
install.packages("ggplot2")
# Load packages
library('ggplot2')
# SCATTER single plot
ggplot(data, aes(x = column_x, y = column_y)) + # aes = aesthetic
geom_point() # adding a layer/ type_of_graph, poiny --> scatter
# %% SUMMARY OF FUNCTIONS () ---------------------------
# head
# str
# subset
# order
# %% DataSet Basics ---------------------------
# Make dataset
name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 1.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
# Create a data frame from the vectors
planets_df <- data.frame(name, type, diameter, rotation, rings)
mars <- planets_df[4,]
diameter <- planets_df[,3]
diameter <- planets_df[,"diameter"]
planets_df$diameter # short-cut
# Select columns with condition
rings_vector <- planets_df$rings # False True list
planets_df[rings_vector, "name"] # Show 'name' with True rings
planets_df[rings_vector, ] # Show all columns with True rings
# subset(my_df, subset = some_condition)
subset(planets_df, subset = (diameter < 1))
# Make general name
dataset <- planets_df
# head dataset
head(dataset)
# structure dataset
str(dataset)
# sorting and order
a <- c(100, 10, 1000)
order(a)
az <- c('a', 'F', 'f', 'A', 'z')
order(az)
positions <- order(planets_df$diameter)
planets_df[positions,]
# Install packages
install.packages("gapminder")
# Load packages
library('gapminder')
library('dplyr')
# ---- Functions ----
# select        = ...
# filter        = ...
# arrange       = Sort columns
# mutate        = Add new feature
# transmutate   = ...
# count         = ...
# group_by      = ...
# ungroup       = ...
# summarize     = mean, sum, median, min, max
# rename        = ...
# glimpse
# slice_max
# slice_min
# top_n
# lag
# ----- Examples (all verbs can be combined at once in order) -----
glimpse(dataset)
?select_helpers
# SELECT
dataset %>%
select(column1, column2, column4:column7, new_name = old_name)
knitr::opts_chunk$set(echo = TRUE)
plot(cars)
plot(pressure)
plot(pressure)
plot(cars)
print(hi)
# Load packages
library('gapminder')
library('dplyr')
```
# Load packages
library('gapminder')
```{# Install packages}
# Load packages
library('gapminder')
library('dplyr')
```
```{r}
# Install packages
install.packages("gapminder")
# Load packages
library('gapminder')
library('dplyr')
# Load packages
library('gapminder')
library('dplyr')
# Load packages
library('gapminder')
```{r}
# Install packages
install.packages("gapminder")
install.packages("gapminder")
```{r}
# Get explaination of a function
glimpse(dataset)
?select_helpers
# Get explaination of a function
glimpse(dataset)
?select_helpers
# Get explaination of a function
glimpse(dataset)
?select_helpers
# Get explaination of a function
glimpse(dataset)
?select_helpers
# INTERMEZZO __ CHANGE OVER TIME
v <- c(1,3,6,14)
sub_the_previous <- lag(v)
diff_consecative <- v - lag(v)
View(dataset)
View(dataset)
# Give  headers a name
name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
# Data to store
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", "Gas giant")
diameter <- c(0.382, 0.949, 1, 0.532, 1.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
# Create a data frame from the vectors
planets_df <- data.frame(name, type, diameter, rotation, rings)
mars <- planets_df[4,]
# Make general name
dataset <- planets_df
# head dataset
head(dataset)
# structure dataset
str(dataset)
# Make general name
dataset <- planets_df
# head dataset
head(dataset)
# structure dataset
str(dataset)
# head dataset
head(dataset)
# structure dataset
str(dataset)
# Make general name
dataset <- planets_df
# Example 1 - numeric
a <- c(100, 10, 1000)
order(a)
# Example 2 - strings
az <- c('a', 'F', 'f', 'A', 'z')
order(az)
# Example 3 - obtain the order
positions <- order(planets_df$diameter)
planets_df[positions,]
# Example 3 - obtain the order
positions <- order(planets_df$diameter)
planets_df[positions,]
# Example 1 - numeric
a <- c(100, 10, 1000)
order(a)
# Example 2 - strings
az <- c('a', 'F', 'f', 'A', 'z')
order(az)
positions <- order(planets_df$diameter)
positions
# Install packages
install.packages("gapminder")
install.packages("tidyverse")
